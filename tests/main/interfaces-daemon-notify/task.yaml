summary: Ensure that the daemon-notify interface works.

# test is timing dependant and may fail on very slow systems
backends: [-autopkgtest]

details: |
    The daemon-notify interface allows sending notification messages 
    to systemd through the notify socket

prepare: |
    # shellcheck source=tests/lib/snaps.sh
    . "$TESTSLIB/snaps.sh"
    install_local test-snapd-daemon-notify

execute: |
    # shellcheck source=tests/lib/journalctl.sh
    . "$TESTSLIB/journalctl.sh"

    echo "The interface is not connected by default"
    snap interfaces -i daemon-notify | MATCH -- "- +test-snapd-daemon-notify:daemon-notify"

    echo "The service cannot be started with the interface disconnected"
    snap start test-snapd-daemon-notify.notify || true
    snap services test-snapd-daemon-notify.notify | MATCH "disabled\\s*inactive"

    echo "When the interface is connected"
    snap connect test-snapd-daemon-notify:daemon-notify

    denials_before="$(get_journalctl_log -u snap.test-snapd-daemon-notify.notify.service | grep -c 'Permission denied' || true)"
    echo "Then after we start the service there are no denials"
    snap start test-snapd-daemon-notify.notify
    for _ in $(seq 10); do
        denials_after="$(get_journalctl_log -u snap.test-snapd-daemon-notify.notify.service | grep -c 'Permission denied' || true)"
        if [ "$denials_before" -ne "$denials_after" ]; then
            break
        fi
        sleep 1
    done
    [ "$denials_before" -eq "$denials_after" ]

    echo "And the service is marked as active"
    snap services test-snapd-daemon-notify.notify | MATCH "disabled\\s*active"

    if [ "$(snap debug confinement)" = partial ] ; then
        exit 0
    fi

    echo "When the plug is disconnected"
    snap disconnect test-snapd-daemon-notify:daemon-notify

    echo "And the service is stopped"
    snap stop test-snapd-daemon-notify.notify

    echo "Then the snap is not able to send notification messages"
    denials_before="$(get_journalctl_log -u snap.test-snapd-daemon-notify.notify.service | grep -c 'Permission denied' || true)"
    snap start test-snapd-daemon-notify.notify || true
    for _ in $(seq 10); do
        denials_after="$(get_journalctl_log -u snap.test-snapd-daemon-notify.notify.service | grep -c 'Permission denied' || true)"
        if [ "$denials_before" -ne "$denials_after" ]; then
            break
        fi
        sleep 1
    done
    [ "$denials_before" -ne "$denials_after" ]
